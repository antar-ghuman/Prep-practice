class Solution:
    def minWindow(self, s1: str, s2: str) -> str:

        n, m = len(s1), len(s2)
        min_length = float('inf')
        result_substring = ""

        i, j = 0, 0
        while i < n:
            if s1[i] == s2[j]:
                j += 1
                if j == m:
                    end = i + 1
                    j -= 1
                    while j >= 0:
                        if s1[i] == s2[j]:
                            j -= 1
                        i -= 1
                    i += 1
                    j = 0
                    if end - i < min_length:
                        min_length = end - i
                        result_substring = s1[i:end]
            i += 1

        return result_substring if result_substring else ""


        # n, m = len(s1), len(s2)
        # min_length = float('inf')
        # result_substring = ""

        # for i in range(n):
        #     for j in range(i + m, n + 1):
        #         if all(c in s1[i:j] for c in s2):
        #             if j - i < min_length:
        #                 min_length = j - i
        #                 result_substring = s1[i:j]

        # return result_substring if result_substring else ""
            
            # n, m = len(s1), len(s2)
            # min_length = float('inf')
            # result_substring = ""

            # for i in range(n):
            #     if s1[i] == s2[0]:
            #         j = 0
            #         for k in range(i, n):
            #             if s1[k] == s2[j]:
            #                 j += 1
            #                 if j == m:
            #                     if k - i + 1 < min_length:
            #                         min_length = k - i + 1
            #                         result_substring = s1[i:k+1]
            #                     break

            # return result_substring
