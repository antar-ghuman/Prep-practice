# class Solution(object):
#     def isValid(self, s):
#         stack = [] # only use append and pop
#         pairs = {
#             '(': ')',
#             '{': '}',
#             '[': ']'
#         }
#         for bracket in s:
#             if bracket in pairs:
#                 stack.append(bracket)
#             elif len(stack) == 0 or bracket != pairs[stack.pop()]:
#                 return False

#         return len(stack) == 0

class Solution:
    def isValid(self, s: str) -> bool:
        stack = []

        for char in s:
            if not stack:
                stack.append(char)
            elif stack[-1] == "(" and char == ')':
                stack.pop()
            elif stack[-1] == "{" and char == "}":
                stack.pop()
            elif stack[-1] == "[" and char == "]":
                stack.pop()
            else:
                stack.append(char)
        if not stack:
            return True
        return False
