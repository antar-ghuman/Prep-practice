class Solution:
    def circularArrayLoop(self, nums: List[int]) -> bool:
        def next_step(pointer, value, size):
            result = (pointer + value) % size
            if result < 0:
                result += size
            return result

        def is_not_cycle(nums, prev_direction, pointer):
            curr_direction = nums[pointer] >= 0

            if prev_direction != curr_direction or abs(nums[pointer] % len(nums)) == 0:
                return True

            return False

        size = len(nums)

        for i in range(size):
            slow = i
            fast = i
            forward = nums[i] > 0

            while True:
                slow = next_step(slow, nums[slow], size)

                if is_not_cycle(nums, forward, slow):
                    break

                fast = next_step(fast, nums[fast], size)

                if is_not_cycle(nums, forward, fast):
                    break

                fast = next_step(fast, nums[fast], size)

                if is_not_cycle(nums, forward, fast):
                    break

                if slow == fast:
                    return True

        return False
