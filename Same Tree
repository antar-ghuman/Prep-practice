# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:
        if not p and not q:
            return True
        if not p or not q:
            return False

        t = deque([p])
        s = deque([q])

        while t and s:
            node1 = t.popleft()
            node2 = s.popleft()

            if node1.val != node2.val:
                return False

            if node1.left and node2.left:
                t.append(node1.left)
                s.append(node2.left)
            elif node1.left or node2.left:
                return False

            if node1.right and node2.right:
                t.append(node1.right)
                s.append(node2.right)
            elif node1.right or node2.right:
                return False

        return True
        # return (p.val == q.val) and self.isSameTree(p.left, q.left) and self.isSameTree(p.right, q.right)
